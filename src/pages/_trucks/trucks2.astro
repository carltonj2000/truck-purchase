---
import { truckFilter, truckSort, truckMinMax } from "./trucks1";
import { data } from "./trucks1";
import type { TruckT } from "./trucks1";
const trucks: TruckT[] = truckMinMax(truckSort(truckFilter(data.trucks)));
---

<div class="mt-3 flex flex-col items-center">
  <p>
    <button id="mfgOpt" class="px-2 py-1 rounded-xl bg-slate-300">Mfg</button>
    or
    <button id="dlrOpt" class="px-2 py-1 rounded-xl bg-slate-300">Dlr</button>
    or
    <button id="taxOpt" class="px-2 py-1 rounded-xl bg-slate-300">Tax</button>
  </p>
  <table class="table-auto ml-2 mt-3">
    <thead class="text-sm">
      <tr class="py-2 bg-slate-300">
        <th class="py-2">VIN, Sticker, Dlr</th>
        <th class="py-2" id="mmOpt">Price</th>
        <th class="mfgOptVis py-2">Mfg</th>
        <th class="dlrOptVis py-2">Dlr</th>
        <th class="taxOptVis py-2">Tax And Fees</th>
      </tr>
    </thead>
    <tbody>
      {
        trucks.map((truck: any) => {
          const tax = truck.tax ? truck.tax.total : 0;
          const dealer = truck.dealer ? truck.dealer.total : 0;
          const hideNames = ""; // hidden"; // or '';
          return (
            <tr class="odd:bg-slate-100 even:bg-slate-200 border-y border-gray-300">
              <td class="px-2 py-2 text-xs align-top">
                <div class="flex flex-col items-end">
                  <div>{truck.vin}</div>
                  <a href={`/windowStickers/${truck.vin}.pdf`}>
                    <div>{truck.stickerDate}</div>
                  </a>
                  <div>{truck.exteriorColorShort}</div>
                  <div>{truck.dealerShort}</div>
                  <div class="mmOptVis">{truck.minMaxDelta}</div>
                </div>
              </td>
              <td class="px-2 py-2 text-sm font-mono align-top">
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>bsrp</span>
                  <span>{truck.bsrp}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    mfg opts
                  </span>
                  <span>{truck.srp - truck.bsrp}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>srp</span>
                  <span>{truck.srp}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    dlr opts
                  </span>
                  <span>{dealer}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>list</span>
                  <span>{truck.listPrice}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    tax Fees
                  </span>
                  <span>{tax}</span>
                </div>
                <div class="flex justify-between items-center w-full font-semibold">
                  <span class={`text-xs text-slate-700` + hideNames}>
                    Total
                  </span>
                  <span>{truck.listPrice + tax + dealer}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>down</span>
                  <span>{truck.downPayment}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    taxable
                  </span>
                  <span>{truck.listPrice + truck.downPayment}</span>
                </div>
                <div class="flex justify-between items-center w-full">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    finance dis
                  </span>
                  <span>{truck.financeDiscount}</span>
                </div>
                <div class="flex justify-between items-center w-full gap-1">
                  <span class={`text-xs text-slate-400` + hideNames}>
                    finance down
                  </span>
                  <span>{truck.downPayment - truck.financeDiscount}</span>
                </div>
                <div class="flex justify-between items-center w-full font-semibold">
                  <span class={`text-xs text-slate-700` + hideNames}>
                    Financed
                  </span>
                  <span>{truck.listPrice + tax - truck.downPayment}</span>
                </div>
              </td>
              <td class="mfgOptVis px-2 py-2 text-xs align-top">
                <div class="flex flex-col">
                  {truck.manufacture.opts.map(
                    ({ name, price }: { name: string; price: number }) => (
                      <div class="flex justify-between items-center">
                        <span class="px-2 py-1 rounded-lg">{name}</span>
                        <span>{price}</span>
                      </div>
                    ),
                  )}
                  <div class="flex justify-between">
                    <span class="px-2 py-1 rounded-lg">Total</span>
                    <span>{truck.manufacture.total}</span>
                  </div>
                </div>
              </td>
              <td class="dlrOptVis px-2 py-2 text-xs align-top">
                {truck.dealer ? (
                  <div class="flex flex-col">
                    {truck.dealer.opts.map(
                      ({ name, price }: { name: string; price: number }) => (
                        <div class="flex justify-between items-center">
                          <span class="px-2 py-1 rounded-lg">{name}</span>
                          <span>{price}</span>
                        </div>
                      ),
                    )}
                    <div class="flex justify-between">
                      <span class="px-2 py-1 rounded-lg">Total</span>
                      <span>{dealer}</span>
                    </div>
                  </div>
                ) : (
                  <span>None</span>
                )}
              </td>
              <td class="taxOptVis px-2 py-2 text-xs align-top">
                {truck.tax ? (
                  <div class="flex flex-col">
                    {truck.tax.opts.map(
                      ({ name, price }: { name: string; price: number }) => (
                        <div class="flex justify-between items-center">
                          <span class="px-2 py-1 rounded-lg">{name}</span>
                          <span>{price}</span>
                        </div>
                      ),
                    )}
                    <div class="flex justify-between">
                      <span class="px-2 py-1 rounded-lg">Total</span>
                      <span>{truck.tax.total}</span>
                    </div>
                  </div>
                ) : (
                  <span>None</span>
                )}
              </td>
            </tr>
          );
        })
      }
    </tbody>
  </table>
</div>

<script is:inline>
  let mfgVis = true;
  const mfgOpt = document.getElementById("mfgOpt");
  const mfgOptVis = Array.from(document.querySelectorAll(".mfgOptVis"));
  if (mfgOpt) {
    if (mfgOptVis.length) {
      mfgOpt.addEventListener("click", () => {
        if (mfgVis) {
          mfgOptVis.forEach((mov) => mov.classList.add("hidden"));
        } else {
          mfgOptVis.forEach((mov) => mov.classList.remove("hidden"));
        }
        mfgVis = !mfgVis;
      });
    } else console.error("Failed finding mfgOptVis");
  } else console.error("Failed finding mfgOpt");

  let dlrVis = true;
  const dlrOpt = document.getElementById("dlrOpt");
  const dlrOptVis = Array.from(document.querySelectorAll(".dlrOptVis"));
  if (dlrOpt) {
    if (dlrOptVis.length) {
      dlrOpt.addEventListener("click", () => {
        if (dlrVis) {
          dlrOptVis.forEach((mov) => mov.classList.add("hidden"));
        } else {
          dlrOptVis.forEach((mov) => mov.classList.remove("hidden"));
        }
        dlrVis = !dlrVis;
      });
    } else console.error("Failed finding dlrOptVis");
  } else console.error("Failed finding dlrOpt");

  let taxVis = true;
  const taxOpt = document.getElementById("taxOpt");
  const taxOptVis = Array.from(document.querySelectorAll(".taxOptVis"));
  if (taxOpt) {
    if (taxOptVis.length) {
      taxOpt.addEventListener("click", () => {
        if (taxVis) {
          taxOptVis.forEach((mov) => mov.classList.add("hidden"));
        } else {
          taxOptVis.forEach((mov) => mov.classList.remove("hidden"));
        }
        taxVis = !taxVis;
      });
    } else console.error("Failed finding taxOptVis");
  } else console.error("Failed finding taxOpt");

  let mmVis = true;
  const mmOpt = document.getElementById("mmOpt");
  const mmOptVis = Array.from(document.querySelectorAll(".mmOptVis"));
  if (mmOpt) {
    if (mmOptVis.length) {
      mmOpt.addEventListener("click", () => {
        if (mmVis) {
          mmOptVis.forEach((mov) => mov.classList.add("hidden"));
        } else {
          mmOptVis.forEach((mov) => mov.classList.remove("hidden"));
        }
        mmVis = !mmVis;
      });
    } else console.error("Failed finding mmOptVis");
  } else console.error("Failed finding mmOpt");

  mfgOpt.click();
  dlrOpt.click();
  taxOpt.click();
  mmOpt.click();
</script>

<style>
  .hidden {
    display: none;
  }
</style>
